{"version":3,"sources":["Diamond.js","App.js","reportWebVitals.js","index.js"],"names":["Diamond","useState","data","setData","data2","setData2","getData","axios","get","then","res","list","forEach","element","fixed_price","Intl","NumberFormat","format","catch","error","console","log","useEffect","columns","title","dataIndex","key","render","text","style","color","columns2","textAlign","display","margin","dataSource","pagination","type","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oOA4EeA,MAvEf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAU,WACZH,EAAQ,IACRE,EAAS,IACTE,IAAMC,IAAN,oIACKC,MAAK,SAAAC,GACeA,EAAIR,KAAKS,KACjBC,SAAQ,SAAAC,GACbA,EAAQC,aAAc,IAAIC,KAAKC,cAAeC,OAAOJ,EAAQC,gBAEjEX,EAAQO,EAAIR,KAAKS,SAEpBO,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC5BZ,IAAMC,IAAN,qHACCC,MAAK,SAAAC,GACeA,EAAIR,KAAKS,KACjBC,SAAQ,SAAAC,GACbA,EAAQC,aAAc,IAAIC,KAAKC,cAAeC,OAAOJ,EAAQC,gBAEjET,EAASK,EAAIR,KAAKS,SAErBO,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAKpCG,qBAAU,WACNhB,MACD,IAEH,IAAMiB,EAAU,CACZ,CACIC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAAC,GAAI,OAAI,mBAAGC,MAAO,CAACC,MAAO,WAAlB,SAA+BF,MAEnD,CACIJ,MAAO,QACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAAAC,GAAI,OAAI,4BAAIA,OAGtBG,EAAW,CACb,CACIP,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAAC,GAAI,OAAI,mBAAGC,MAAO,CAACC,MAAO,WAAlB,SAA+BF,MAEnD,CACIJ,MAAO,QACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAAAC,GAAI,OAAI,4BAAIA,OAG5B,OACI,sBAAKC,MAAO,CAACG,UAAW,UAAxB,UACI,sBAAKH,MAAO,CAACI,QAAS,QAAtB,UACA,cAAC,IAAD,CAAOJ,MAAO,CAACK,OAAQ,IAAKC,WAAYjC,GAAQA,EAAMqB,QAASA,EAASa,YAAY,IACpF,cAAC,IAAD,CAAOP,MAAO,CAACK,OAAQ,IAAKC,WAAY/B,GAASA,EAAOmB,QAASQ,EAAUK,YAAY,OAEvF,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAAS,WAxCpChC,KAwCI,yBC5DGiC,MATf,WAEE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f6e80fcb.chunk.js","sourcesContent":["import { Button, Table } from 'antd';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\n\r\nfunction Diamond() {\r\n    const [data, setData] = useState([]);\r\n    const [data2, setData2] = useState([]);\r\n    const getData = () => {\r\n        setData([])\r\n        setData2([])\r\n        axios.get(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=5&sortBy=fixed_price&name=&order=asc&saleType&category=16&tokenType`)\r\n            .then(res => {\r\n                const tempData = res.data.list\r\n                tempData.forEach(element => {\r\n                    element.fixed_price = new Intl.NumberFormat().format(element.fixed_price)\r\n                });\r\n                setData(res.data.list)\r\n            })\r\n            .catch(error => console.log(error));\r\n            axios.get(`https://market-api.radiocaca.com/nft-sales?pageNo=1&pageSize=5&sortBy=fixed_price&order=asc&name=purple%20diamond`)\r\n            .then(res => {\r\n                const tempData = res.data.list\r\n                tempData.forEach(element => {\r\n                    element.fixed_price = new Intl.NumberFormat().format(element.fixed_price)\r\n                });\r\n                setData2(res.data.list)\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    const refreshData = () => {\r\n        getData()\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: text => <b style={{color: '#a5a51a'}}>{text}</b>,\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'fixed_price',\r\n            key: 'fixed_price',\r\n            render: text => <b>{text}</b>,\r\n        },\r\n    ];\r\n    const columns2 = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            render: text => <b style={{color: '#8f02d7'}}>{text}</b>,\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'fixed_price',\r\n            key: 'fixed_price',\r\n            render: text => <b>{text}</b>,\r\n        },\r\n    ];\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <div style={{display: 'flex'}}>\r\n            <Table style={{margin: 20}} dataSource={data && data} columns={columns} pagination={false}/>\r\n            <Table style={{margin: 20}} dataSource={data2 && data2} columns={columns2} pagination={false}/>\r\n            </div>\r\n            <Button type=\"primary\" onClick={() => refreshData()}>Refresh</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Diamond;\r\n","import Diamond from \"./Diamond\";\n\nfunction App() {\n \n  return (\n    <div>\n      <Diamond></Diamond>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}